{"ast":null,"code":"import _regeneratorRuntime from\"/Users/wailwinphyo/root/projects/React/waveMusic/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/Users/wailwinphyo/root/projects/React/waveMusic/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/Users/wailwinphyo/root/projects/React/waveMusic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React from\"react\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import{faMusic}from\"@fortawesome/free-solid-svg-icons\";// import { playAudio } from \"./util\";\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var LibrarySong=function LibrarySong(_ref){var song=_ref.song,setCurrentSong=_ref.setCurrentSong,audio=_ref.audio,isPlaying=_ref.isPlaying,setSongs=_ref.setSongs,songs=_ref.songs;var songSelectHandler=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var newSongs;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return setCurrentSong(song);case 2://Even song select, song can't play automatically. This code is for that -->>\n// playAudio(isPlaying, audio);\nif(isPlaying)audio.current.play();//Change Active\nnewSongs=songs.map(function(songCheck){if(songCheck.id===song.id){return _objectSpread(_objectSpread({},songCheck),{},{active:true});//! I think that spreaded object and modify new value\n}else{return _objectSpread(_objectSpread({},songCheck),{},{active:false});}});//? Notice map return a new Array\nsetSongs(newSongs);case 5:case\"end\":return _context.stop();}}},_callee);}));return function songSelectHandler(){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{className:\"library-song \".concat(song.active?\"selected\":\"\"),onClick:songSelectHandler,children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faMusic,size:\"2x\",className:\"music-icon\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"song-info\",children:[/*#__PURE__*/_jsxs(\"h4\",{children:[\"Title : \",song.name]}),/*#__PURE__*/_jsxs(\"h5\",{children:[\"Artist : \",song.artist]})]})]});};export default LibrarySong;","map":{"version":3,"sources":["/Users/wailwinphyo/root/projects/React/waveMusic/src/LibrarySong.js"],"names":["React","FontAwesomeIcon","faMusic","LibrarySong","song","setCurrentSong","audio","isPlaying","setSongs","songs","songSelectHandler","current","play","newSongs","map","songCheck","id","active","name","artist"],"mappings":"qYAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,eAAT,KAAgC,gCAAhC,CACA,OAASC,OAAT,KAAwB,mCAAxB,CACA;wFAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAOd,IANJC,CAAAA,IAMI,MANJA,IAMI,CALJC,cAKI,MALJA,cAKI,CAJJC,KAII,MAJJA,KAII,CAHJC,SAGI,MAHJA,SAGI,CAFJC,QAEI,MAFJA,QAEI,CADJC,KACI,MADJA,KACI,CACJ,GAAMC,CAAAA,iBAAiB,2FAAG,sKAClBL,CAAAA,cAAc,CAACD,IAAD,CADI,QAGxB;AACA;AACA,GAAIG,SAAJ,CAAeD,KAAK,CAACK,OAAN,CAAcC,IAAd,GAEf;AACMC,QARkB,CAQPJ,KAAK,CAACK,GAAN,CAAU,SAACC,SAAD,CAAe,CACxC,GAAIA,SAAS,CAACC,EAAV,GAAiBZ,IAAI,CAACY,EAA1B,CAA8B,CAC5B,sCAAYD,SAAZ,MAAuBE,MAAM,CAAE,IAA/B,GAAuC;AACxC,CAFD,IAEO,CACL,sCAAYF,SAAZ,MAAuBE,MAAM,CAAE,KAA/B,GACD,CACF,CANgB,CARO,CAexB;AAEAT,QAAQ,CAACK,QAAD,CAAR,CAjBwB,sDAAH,kBAAjBH,CAAAA,iBAAiB,2CAAvB,CAmBA,mBACE,aACE,SAAS,wBAAkBN,IAAI,CAACa,MAAL,CAAc,UAAd,CAA2B,EAA7C,CADX,CAEE,OAAO,CAAEP,iBAFX,wBAIE,KAAC,eAAD,EAAiB,IAAI,CAAER,OAAvB,CAAgC,IAAI,CAAC,IAArC,CAA0C,SAAS,CAAC,YAApD,EAJF,cAKE,aAAK,SAAS,CAAC,WAAf,wBACE,iCAAaE,IAAI,CAACc,IAAlB,GADF,cAEE,kCAAcd,IAAI,CAACe,MAAnB,GAFF,GALF,GADF,CAYD,CAvCD,CAyCA,cAAehB,CAAAA,WAAf","sourcesContent":["import React from \"react\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\n// import { playAudio } from \"./util\";\n\nconst LibrarySong = ({\n  song,\n  setCurrentSong,\n  audio,\n  isPlaying,\n  setSongs,\n  songs,\n}) => {\n  const songSelectHandler = async () => {\n    await setCurrentSong(song);\n\n    //Even song select, song can't play automatically. This code is for that -->>\n    // playAudio(isPlaying, audio);\n    if (isPlaying) audio.current.play();\n\n    //Change Active\n    const newSongs = songs.map((songCheck) => {\n      if (songCheck.id === song.id) {\n        return { ...songCheck, active: true }; //! I think that spreaded object and modify new value\n      } else {\n        return { ...songCheck, active: false };\n      }\n    });\n    //? Notice map return a new Array\n\n    setSongs(newSongs);\n  };\n  return (\n    <div\n      className={`library-song ${song.active ? \"selected\" : \"\"}`}\n      onClick={songSelectHandler}\n    >\n      <FontAwesomeIcon icon={faMusic} size=\"2x\" className=\"music-icon\" />\n      <div className=\"song-info\">\n        <h4>Title : {song.name}</h4>\n        <h5>Artist : {song.artist}</h5>\n      </div>\n    </div>\n  );\n};\n\nexport default LibrarySong;\n"]},"metadata":{},"sourceType":"module"}