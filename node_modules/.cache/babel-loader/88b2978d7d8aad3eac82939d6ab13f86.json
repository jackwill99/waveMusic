{"ast":null,"code":"var _jsxFileName = \"/Users/wailwinphyo/root/projects/React/waveMusic/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./styles/app.scss\";\nimport Player from \"./Player\";\nimport Song from \"./Song\";\nimport data from \"./data\";\nimport Library from \"./Library\";\nimport Nav from \"./Nav\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //State\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [audio, setAudio] = useState(\"\"); // audio is refrence to the audio tag only.\n  // When SongLibrary select , change the audio src . So it works this state\n\n  const [libraryStatus, setLibraryStatus] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Nav, {\n        libraryStatus: libraryStatus,\n        setLibraryStatus: setLibraryStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Song, {\n        currentSong: currentSong\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Player, {\n        currentSong: currentSong,\n        isPlaying: isPlaying,\n        setIsPlaying: setIsPlaying,\n        audio: audio,\n        setAudio: setAudio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Library, {\n        songs: songs,\n        setSongs: setSongs,\n        setCurrentSong: setCurrentSong,\n        audio: audio,\n        isPlaying: isPlaying,\n        libraryStatus: libraryStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"d2J6fKmiWtHxnKr+KaH/zECfwe0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/wailwinphyo/root/projects/React/waveMusic/src/App.js"],"names":["React","useState","Player","Song","data","Library","Nav","App","songs","setSongs","currentSong","setCurrentSong","isPlaying","setIsPlaying","audio","setAudio","libraryStatus","setLibraryStatus"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,mBAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAACG,IAAI,EAAL,CAAlC;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAACO,KAAK,CAAC,CAAD,CAAN,CAA9C;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC,CALa,CAK2B;AACxC;;AAEA,QAAM,CAACe,aAAD,EAAgBC,gBAAhB,IAAoChB,QAAQ,CAAC,KAAD,CAAlD;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA,6BACE,QAAC,GAAD;AACE,QAAA,aAAa,EAAEe,aADjB;AAEE,QAAA,gBAAgB,EAAEC;AAFpB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,WAAW,EAAEP;AAAnB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AACE,QAAA,WAAW,EAAEA,WADf;AAEE,QAAA,SAAS,EAAEE,SAFb;AAGE,QAAA,YAAY,EAAEC,YAHhB;AAIE,QAAA,KAAK,EAAEC,KAJT;AAKE,QAAA,QAAQ,EAAEC;AALZ;AAAA;AAAA;AAAA;AAAA,cAFF,eASE,QAAC,OAAD;AACE,QAAA,KAAK,EAAEP,KADT;AAEE,QAAA,QAAQ,EAAEC,QAFZ;AAGE,QAAA,cAAc,EAAEE,cAHlB;AAIE,QAAA,KAAK,EAAEG,KAJT;AAKE,QAAA,SAAS,EAAEF,SALb;AAME,QAAA,aAAa,EAAEI;AANjB;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;GAtCQT,G;;KAAAA,G;AAwCT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./styles/app.scss\";\nimport Player from \"./Player\";\nimport Song from \"./Song\";\nimport data from \"./data\";\nimport Library from \"./Library\";\nimport Nav from \"./Nav\";\n\nfunction App() {\n  //State\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [audio, setAudio] = useState(\"\"); // audio is refrence to the audio tag only.\n  // When SongLibrary select , change the audio src . So it works this state\n\n  const [libraryStatus, setLibraryStatus] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <div>\n        <Nav\n          libraryStatus={libraryStatus}\n          setLibraryStatus={setLibraryStatus}\n        />\n      </div>\n      <div>\n        <Song currentSong={currentSong} />\n        <Player\n          currentSong={currentSong}\n          isPlaying={isPlaying}\n          setIsPlaying={setIsPlaying}\n          audio={audio}\n          setAudio={setAudio}\n        />\n        <Library\n          songs={songs}\n          setSongs={setSongs}\n          setCurrentSong={setCurrentSong}\n          audio={audio}\n          isPlaying={isPlaying}\n          libraryStatus={libraryStatus}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}