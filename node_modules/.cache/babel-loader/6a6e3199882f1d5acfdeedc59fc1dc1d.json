{"ast":null,"code":"import _slicedToArray from\"/Users/wailwinphyo/root/projects/React/waveMusic/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import\"./styles/app.scss\";import Player from\"./Player\";import Song from\"./Song\";import data from\"./data\";import Library from\"./Library\";import Nav from\"./Nav\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){//State\nvar _useState=useState(data()),_useState2=_slicedToArray(_useState,2),songs=_useState2[0],setSongs=_useState2[1];var _useState3=useState(songs[0]),_useState4=_slicedToArray(_useState3,2),currentSong=_useState4[0],setCurrentSong=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isPlaying=_useState6[0],setIsPlaying=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),audio=_useState8[0],setAudio=_useState8[1];// audio is refrence to the audio tag only.\n// When SongLibrary select , change the audio src . So it works this state\nvar _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),libraryStatus=_useState10[0],setLibraryStatus=_useState10[1];return/*#__PURE__*/_jsxs(\"div\",{className:\"App \".concat(libraryStatus?\"library-active-move\":\"\"),children:[/*#__PURE__*/_jsx(Nav,{libraryStatus:libraryStatus,setLibraryStatus:setLibraryStatus}),/*#__PURE__*/_jsx(Song,{currentSong:currentSong}),/*#__PURE__*/_jsx(Player,{currentSong:currentSong,isPlaying:isPlaying,setIsPlaying:setIsPlaying,audio:audio,setAudio:setAudio,songs:songs,setSongs:setSongs,setCurrentSong:setCurrentSong}),/*#__PURE__*/_jsx(Library,{songs:songs,setSongs:setSongs,setCurrentSong:setCurrentSong,audio:audio,isPlaying:isPlaying,libraryStatus:libraryStatus})]});}export default App;","map":{"version":3,"sources":["/Users/wailwinphyo/root/projects/React/waveMusic/src/App.js"],"names":["React","useState","Player","Song","data","Library","Nav","App","songs","setSongs","currentSong","setCurrentSong","isPlaying","setIsPlaying","audio","setAudio","libraryStatus","setLibraryStatus"],"mappings":"mIAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAO,mBAAP,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,GAAP,KAAgB,OAAhB,C,wFAEA,QAASC,CAAAA,GAAT,EAAe,CACb;AACA,cAA0BN,QAAQ,CAACG,IAAI,EAAL,CAAlC,wCAAOI,KAAP,eAAcC,QAAd,eACA,eAAsCR,QAAQ,CAACO,KAAK,CAAC,CAAD,CAAN,CAA9C,yCAAOE,WAAP,eAAoBC,cAApB,eACA,eAAkCV,QAAQ,CAAC,KAAD,CAA1C,yCAAOW,SAAP,eAAkBC,YAAlB,eACA,eAA0BZ,QAAQ,CAAC,EAAD,CAAlC,yCAAOa,KAAP,eAAcC,QAAd,eAAwC;AACxC;AAEA,eAA0Cd,QAAQ,CAAC,KAAD,CAAlD,0CAAOe,aAAP,gBAAsBC,gBAAtB,gBAEA,mBACE,aAAK,SAAS,eAASD,aAAa,CAAG,qBAAH,CAA2B,EAAjD,CAAd,wBACE,KAAC,GAAD,EAAK,aAAa,CAAEA,aAApB,CAAmC,gBAAgB,CAAEC,gBAArD,EADF,cAEE,KAAC,IAAD,EAAM,WAAW,CAAEP,WAAnB,EAFF,cAGE,KAAC,MAAD,EACE,WAAW,CAAEA,WADf,CAEE,SAAS,CAAEE,SAFb,CAGE,YAAY,CAAEC,YAHhB,CAIE,KAAK,CAAEC,KAJT,CAKE,QAAQ,CAAEC,QALZ,CAME,KAAK,CAAEP,KANT,CAOE,QAAQ,CAAEC,QAPZ,CAQE,cAAc,CAAEE,cARlB,EAHF,cAaE,KAAC,OAAD,EACE,KAAK,CAAEH,KADT,CAEE,QAAQ,CAAEC,QAFZ,CAGE,cAAc,CAAEE,cAHlB,CAIE,KAAK,CAAEG,KAJT,CAKE,SAAS,CAAEF,SALb,CAME,aAAa,CAAEI,aANjB,EAbF,GADF,CAwBD,CAED,cAAeT,CAAAA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./styles/app.scss\";\nimport Player from \"./Player\";\nimport Song from \"./Song\";\nimport data from \"./data\";\nimport Library from \"./Library\";\nimport Nav from \"./Nav\";\n\nfunction App() {\n  //State\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [audio, setAudio] = useState(\"\"); // audio is refrence to the audio tag only.\n  // When SongLibrary select , change the audio src . So it works this state\n\n  const [libraryStatus, setLibraryStatus] = useState(false);\n\n  return (\n    <div className={`App ${libraryStatus ? \"library-active-move\" : \"\"}`}>\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song currentSong={currentSong} />\n      <Player\n        currentSong={currentSong}\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        audio={audio}\n        setAudio={setAudio}\n        songs={songs}\n        setSongs={setSongs}\n        setCurrentSong={setCurrentSong}\n      />\n      <Library\n        songs={songs}\n        setSongs={setSongs}\n        setCurrentSong={setCurrentSong}\n        audio={audio}\n        isPlaying={isPlaying}\n        libraryStatus={libraryStatus}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}